LIBRARY ieee;
USE ieee.std_logic_1164.all; 

LIBRARY work;

ENTITY Multiplicador_con_signo_Block IS 
	PORT
	(
		A0 :  IN  STD_LOGIC;
		B0 :  IN  STD_LOGIC;
		B1 :  IN  STD_LOGIC;
		A1 :  IN  STD_LOGIC;
		CLK :  IN  STD_LOGIC;
		P0 :  OUT  STD_LOGIC;
		P1 :  OUT  STD_LOGIC;
		P2 :  OUT  STD_LOGIC;
		P3 :  OUT  STD_LOGIC;
		NC :  OUT  STD_LOGIC
	);
END Multiplicador_con_signo_Block;

ARCHITECTURE bdf_type OF Multiplicador_con_signo_Block IS 

COMPONENT sumador
	PORT(A : IN STD_LOGIC;
		 B : IN STD_LOGIC;
		 Cin : IN STD_LOGIC;
		 S : OUT STD_LOGIC;
		 Cout : OUT STD_LOGIC
	);
END COMPONENT;

SIGNAL	SYNTHESIZED_WIRE_31 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_32 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_0 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_33 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_2 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_34 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_35 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_3 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_4 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_36 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_13 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_15 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_16 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_18 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_37 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_20 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_23 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_26 :  STD_LOGIC;
SIGNAL	SYNTHESIZED_WIRE_29 :  STD_LOGIC;


BEGIN 
SYNTHESIZED_WIRE_2 <= '0';
SYNTHESIZED_WIRE_36 <= '1';
SYNTHESIZED_WIRE_37 <= '1';



SYNTHESIZED_WIRE_20 <= SYNTHESIZED_WIRE_31 AND SYNTHESIZED_WIRE_32;


b2v_13 : sumador
PORT MAP(A => SYNTHESIZED_WIRE_0,
		 B => SYNTHESIZED_WIRE_33,
		 Cin => SYNTHESIZED_WIRE_2,
		 S => SYNTHESIZED_WIRE_29,
		 Cout => SYNTHESIZED_WIRE_15);


SYNTHESIZED_WIRE_33 <= SYNTHESIZED_WIRE_31 AND SYNTHESIZED_WIRE_34;


SYNTHESIZED_WIRE_13 <= SYNTHESIZED_WIRE_35 AND SYNTHESIZED_WIRE_3;


SYNTHESIZED_WIRE_0 <= SYNTHESIZED_WIRE_35 AND SYNTHESIZED_WIRE_32;


SYNTHESIZED_WIRE_16 <= SYNTHESIZED_WIRE_35 AND SYNTHESIZED_WIRE_4;


SYNTHESIZED_WIRE_4 <= NOT(SYNTHESIZED_WIRE_34);



PROCESS(CLK,SYNTHESIZED_WIRE_36,SYNTHESIZED_WIRE_36)
BEGIN
IF (SYNTHESIZED_WIRE_36 = '0') THEN
	SYNTHESIZED_WIRE_34 <= '0';
ELSIF (SYNTHESIZED_WIRE_36 = '0') THEN
	SYNTHESIZED_WIRE_34 <= '1';
ELSIF (RISING_EDGE(CLK)) THEN
	SYNTHESIZED_WIRE_34 <= A1;
END IF;
END PROCESS;


PROCESS(CLK,SYNTHESIZED_WIRE_36,SYNTHESIZED_WIRE_36)
BEGIN
IF (SYNTHESIZED_WIRE_36 = '0') THEN
	SYNTHESIZED_WIRE_31 <= '0';
ELSIF (SYNTHESIZED_WIRE_36 = '0') THEN
	SYNTHESIZED_WIRE_31 <= '1';
ELSIF (RISING_EDGE(CLK)) THEN
	SYNTHESIZED_WIRE_31 <= B0;
END IF;
END PROCESS;


PROCESS(CLK,SYNTHESIZED_WIRE_36,SYNTHESIZED_WIRE_36)
BEGIN
IF (SYNTHESIZED_WIRE_36 = '0') THEN
	SYNTHESIZED_WIRE_32 <= '0';
ELSIF (SYNTHESIZED_WIRE_36 = '0') THEN
	SYNTHESIZED_WIRE_32 <= '1';
ELSIF (RISING_EDGE(CLK)) THEN
	SYNTHESIZED_WIRE_32 <= A0;
END IF;
END PROCESS;


PROCESS(CLK,SYNTHESIZED_WIRE_36,SYNTHESIZED_WIRE_36)
BEGIN
IF (SYNTHESIZED_WIRE_36 = '0') THEN
	SYNTHESIZED_WIRE_35 <= '0';
ELSIF (SYNTHESIZED_WIRE_36 = '0') THEN
	SYNTHESIZED_WIRE_35 <= '1';
ELSIF (RISING_EDGE(CLK)) THEN
	SYNTHESIZED_WIRE_35 <= B1;
END IF;
END PROCESS;


b2v_inst14 : sumador
PORT MAP(A => SYNTHESIZED_WIRE_13,
		 B => SYNTHESIZED_WIRE_33,
		 Cin => SYNTHESIZED_WIRE_15,
		 S => SYNTHESIZED_WIRE_26,
		 Cout => SYNTHESIZED_WIRE_18);


b2v_inst15 : sumador
PORT MAP(A => SYNTHESIZED_WIRE_16,
		 B => SYNTHESIZED_WIRE_33,
		 Cin => SYNTHESIZED_WIRE_18,
		 S => SYNTHESIZED_WIRE_23,
		 Cout => NC);




SYNTHESIZED_WIRE_3 <= SYNTHESIZED_WIRE_34 XOR SYNTHESIZED_WIRE_32;



PROCESS(CLK,SYNTHESIZED_WIRE_37,SYNTHESIZED_WIRE_37)
BEGIN
IF (SYNTHESIZED_WIRE_37 = '0') THEN
	P0 <= '0';
ELSIF (SYNTHESIZED_WIRE_37 = '0') THEN
	P0 <= '1';
ELSIF (RISING_EDGE(CLK)) THEN
	P0 <= SYNTHESIZED_WIRE_20;
END IF;
END PROCESS;


PROCESS(CLK,SYNTHESIZED_WIRE_37,SYNTHESIZED_WIRE_37)
BEGIN
IF (SYNTHESIZED_WIRE_37 = '0') THEN
	P3 <= '0';
ELSIF (SYNTHESIZED_WIRE_37 = '0') THEN
	P3 <= '1';
ELSIF (RISING_EDGE(CLK)) THEN
	P3 <= SYNTHESIZED_WIRE_23;
END IF;
END PROCESS;


PROCESS(CLK,SYNTHESIZED_WIRE_37,SYNTHESIZED_WIRE_37)
BEGIN
IF (SYNTHESIZED_WIRE_37 = '0') THEN
	P2 <= '0';
ELSIF (SYNTHESIZED_WIRE_37 = '0') THEN
	P2 <= '1';
ELSIF (RISING_EDGE(CLK)) THEN
	P2 <= SYNTHESIZED_WIRE_26;
END IF;
END PROCESS;


PROCESS(CLK,SYNTHESIZED_WIRE_37,SYNTHESIZED_WIRE_37)
BEGIN
IF (SYNTHESIZED_WIRE_37 = '0') THEN
	P1 <= '0';
ELSIF (SYNTHESIZED_WIRE_37 = '0') THEN
	P1 <= '1';
ELSIF (RISING_EDGE(CLK)) THEN
	P1 <= SYNTHESIZED_WIRE_29;
END IF;
END PROCESS;


END bdf_type;